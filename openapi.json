{"openapi": "3.0.2", "info": {"title": "KOA-api", "description": "Obtain colonies out of images and return image and json result", "version": "2023.9.22"}, "paths": {"/healthcheck": {"get": {"summary": "Perform Healthcheck", "description": "It basically sends a GET request to the route & hopes to get a \"200\"\nresponse code. Failing to return a 200 response code just enables\nthe GitHub Actions to rollback to the last version the project was\nfound in a \"working condition\". It acts as a last line of defense in\ncase something goes south.\nAdditionally, it also returns a JSON response in the form of:\n{\n    'healtcheck': 'Everything OK!'\n}", "operationId": "perform_healthcheck_healthcheck_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/img_object_detection_to_json": {"post": {"summary": "Img Object Detection To Json", "description": "Object Detection from an image.\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    dict: JSON format containing the Objects Detections.", "operationId": "img_object_detection_to_json_img_object_detection_to_json_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_json_img_object_detection_to_json_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/img_object_detection_to_img": {"post": {"summary": "Img Object Detection To Img", "description": "Object Detection from an image plot bbox on image\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    Image: Image in bytes with bbox annotations.", "operationId": "img_object_detection_to_img_img_object_detection_to_img_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_img_img_object_detection_to_img_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/pescanova_micro": {"post": {"summary": "Pescanova Micro", "operationId": "pescanova_micro_pescanova_micro_post", "parameters": [{"required": true, "schema": {"title": "Plate Id", "type": "string"}, "name": "plate_id", "in": "query"}, {"required": true, "schema": {"title": "Date", "type": "string"}, "name": "date", "in": "query"}, {"required": true, "schema": {"title": "Time", "type": "string"}, "name": "time", "in": "query"}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_pescanova_micro_pescanova_micro_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/get_machine_variables": {"get": {"summary": "Get Machine Variables", "operationId": "get_machine_variables_get_machine_variables_get", "parameters": [{"description": "Select a topic", "required": true, "schema": {"title": "Topic", "enum": ["configuracio", "estat", "maquina", "experiment"], "type": "string", "description": "Select a topic"}, "name": "topic", "in": "query"}, {"description": "Select a range in days", "required": false, "schema": {"title": "Range", "enum": ["1", "7", "30"], "type": "string", "description": "Select a range in days", "default": "1"}, "name": "range", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_img_object_detection_to_img_img_object_detection_to_img_post": {"title": "Body_img_object_detection_to_img_img_object_detection_to_img_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_img_object_detection_to_json_img_object_detection_to_json_post": {"title": "Body_img_object_detection_to_json_img_object_detection_to_json_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_pescanova_micro_pescanova_micro_post": {"title": "Body_pescanova_micro_pescanova_micro_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}